% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options-generate.R
\name{roptgen}
\alias{roptgen}
\title{Generate package option object}
\usage{
roptgen(
  config = NULL,
  object = NULL,
  inline = NULL,
  file = NULL,
  tests = NULL,
  strip_prefix = NULL
)
}
\arguments{
\item{config}{Defaults to option \code{roptgen.file.in}. The location of
the .yaml file describing the package options. See \code{system.file("config.yaml", package = "roptgen")}
for an example of this format}

\item{object}{Defaults to option \code{roptgen.object}. Name of object which will hold option accessor
functions and be exported from your package.}

\item{inline}{Defaults to option \code{roptgen.inline}.Not yet implemented. Whether to inline all code in your project.
This allows not taking a dependency on roptgen, not even in Suggests. This might be useful as
a starting point for code you then modify by hand, or just to keep dependencies to a minimum.}

\item{file}{Defaults to option \code{roptgen.file}, the default of which will be "<package>-options.R".
The file for the generated option code.}

\item{tests}{Defaults to option \code{roptgen.tests}, whether to copy tests or not. Not yet implemented.}

\item{strip_prefix}{Defaults to option \code{roptgen.strip.prefix}. Whether to remove the package name from
the option object's elements, e.g., \code{roptgen_options$roptgen.file.in()} vs \code{roptgen_options$file.in()}.}
}
\value{
No return value.
}
\description{
Generates an R file containing option retrieval and validation code, along with documentation.
See \code{?roptgen.options} for detailed descriptions of each option referenced.
}
